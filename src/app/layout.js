"use client"
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import {
  ClerkProvider,
  SignInButton,
  SignedIn,
  SignedOut,
  UserButton,
  SignOutButton,
  useAuth,
  useUser,
} from '@clerk/nextjs';
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { LogOut } from "lucide-react"
import { useRouter } from 'next/navigation';
import { useEffect } from 'react';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  return (
    <ClerkProvider>
      <html lang="en">
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <header className="flex justify-end items-center p-4 gap-4 h-16">
            <SignedOut>
              <SignInButton mode="modal">
                <button className="btn btn-primary">Sign In</button>
              </SignInButton>
            </SignedOut>
            <SignedIn>
              <AfterSignIn />
            </SignedIn>
          </header>
          {children}
        </body>
      </html>
    </ClerkProvider>
  );
}

function AfterSignIn() {
  const { userId } = useAuth();
  const { user } = useUser();
  const router = useRouter();

  useEffect(() => {
    if (userId) {
      router.push('/dashboard');
    }
  }, [userId, router]);

  return (
    <div className="mt-auto border-t p-4">
      <div className="flex items-center gap-3">
        <Avatar>
          <AvatarImage src={user?.imageUrl || "/placeholder.svg?height=40&width=40"} alt="User avatar" />
          <AvatarFallback>{user?.firstName ? user.firstName[0] : 'JD'}{user?.lastName ? user.lastName[0] : ''}</AvatarFallback>
        </Avatar>
        <div className="flex flex-col">
          <span className="text-sm font-medium">{user ? `${user.firstName} ` : 'John Doe'}</span>
          <span className="text-xs text-muted-foreground">{user?.emailAddresses[0].emailAddress || 'john.doe@example.com'}</span>
        </div>
        <SignOutButton>
          <Button variant="ghost" size="icon" className="ml-auto">
            <LogOut className="h-5 w-5" />
          </Button>
        </SignOutButton>
      </div>
    </div>
  );
}
